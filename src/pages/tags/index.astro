---
import Heading from '@/components/Heading.astro';
import Section from '@/components/Section.astro';
import Tag from '@/components/Tag.astro';
import Base from '@/layouts/Base.astro';
import { AppConfig } from '@/utils/AppConfig';
import { MarkdownInstance } from 'astro';

const { title } = AppConfig;
const { description } = AppConfig;

const allPosts = Object.values(
	import.meta.glob('../posts/*.md', { eager: true })
) as MarkdownInstance<any>[];
const allTags = allPosts.map((post) => post.frontmatter.tags).flat();
const uniqueTags: Set<string> = new Set(allTags);
let tagMap: Record<string, number> = {};

[...uniqueTags].forEach((tag) => {
	const count = allTags.filter((t) => t === tag).length;
	tagMap[tag] = count;
});

tagMap = Object.fromEntries(Object.entries(tagMap).sort((a, b) => b[1] - a[1]));
---

<Base head={{ title, description }}>
	<Section><Heading title="Posts by Tag" /></Section>
	<div class="mx-auto grid w-full max-w-screen-md grid-cols-1 gap-x-6 px-4 md:grid-cols-2 md:px-0">
		{
			Object.entries(tagMap).map(([tag, count]) => (
				<a
					class="group row-span-1 flex justify-between py-2 hover:text-orange-600"
					href={`/tags/${tag}`}
				>
					<Tag tag={tag} />
					<p>{count}</p>
				</a>
			))
		}
	</div>
</Base>
